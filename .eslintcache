[{"D:\\TelephoneConnection\\telephoneconnection\\src\\index.js":"1","D:\\TelephoneConnection\\telephoneconnection\\src\\App.js":"2","D:\\TelephoneConnection\\telephoneconnection\\src\\reportWebVitals.js":"3","D:\\TelephoneConnection\\telephoneconnection\\src\\components\\HeaderComponent.jsx":"4","D:\\TelephoneConnection\\telephoneconnection\\src\\components\\HomeComponent.jsx":"5","D:\\TelephoneConnection\\telephoneconnection\\src\\components\\BankAccountComponent.jsx":"6","D:\\TelephoneConnection\\telephoneconnection\\src\\components\\CitizenIdComponent.jsx":"7","D:\\TelephoneConnection\\telephoneconnection\\src\\components\\ListTelephoneConnectionComponent.jsx":"8","D:\\TelephoneConnection\\telephoneconnection\\src\\services\\TelephoneConnectionService.jsx":"9","D:\\TelephoneConnection\\telephoneconnection\\src\\components\\TelephoneConnectionComponent.jsx":"10","D:\\TelephoneConnection\\telephoneconnection\\src\\components\\SuccessTelephoneConnectionComponent.jsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":1358,"mtime":1610631342299,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1230,"mtime":1610774848040,"results":"16","hashOfConfig":"13"},{"size":383,"mtime":1610633338384,"results":"17","hashOfConfig":"13"},{"size":5460,"mtime":1610804411596,"results":"18","hashOfConfig":"13"},{"size":10034,"mtime":1610804188885,"results":"19","hashOfConfig":"13"},{"size":3323,"mtime":1610457000270,"results":"20","hashOfConfig":"13"},{"size":523,"mtime":1610447019084,"results":"21","hashOfConfig":"13"},{"size":9695,"mtime":1610774675581,"results":"22","hashOfConfig":"13"},{"size":970,"mtime":1610427226898,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1avw0y3",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\TelephoneConnection\\telephoneconnection\\src\\index.js",[],["50","51"],"D:\\TelephoneConnection\\telephoneconnection\\src\\App.js",["52"],"import 'bootstrap/dist/css/bootstrap.css'\nimport logo from './logo.svg';\nimport './App.css';\nimport HeaderComponent from './components/HeaderComponent';\nimport { BrowserRouter as Router ,Switch , Route } from 'react-router-dom'\nimport HomeComponent from './components/HomeComponent';\nimport TelephoneConnectionComponent from './components/TelephoneConnectionComponent';\nimport CitizenIdComponent from './components/CitizenIdComponent';\nimport BankAccountComponent from './components/BankAccountComponent';\nimport ListTelephoneConnectionComponent from './components/ListTelephoneConnectionComponent';\nimport SuccessTelephoneConnectionComponent from './components/SuccessTelephoneConnectionComponent';\n\nfunction App() {\n  return (\n    <div >\n      \n        <HeaderComponent/>\n      \n       \n        <Router>\n        <Switch>\n          <Route path='/' exact component={HomeComponent} />\n          <Route path='/citizenid' component={CitizenIdComponent} />\n          <Route path='/bankaccount' component={BankAccountComponent} />\n          <Route path='/create' component={TelephoneConnectionComponent} />\n          <Route path='/success' component={SuccessTelephoneConnectionComponent} />\n          <Route path='/list' component={ListTelephoneConnectionComponent} />\n          \n        </Switch>\n        </Router>\n       \n    </div>\n  );\n}\n\nexport default App;\n","D:\\TelephoneConnection\\telephoneconnection\\src\\reportWebVitals.js",[],"D:\\TelephoneConnection\\telephoneconnection\\src\\components\\HeaderComponent.jsx",["53"],"import React from 'react'\r\n\r\n\r\n\r\n\r\nfunction HeaderComponent() {\r\n    return (\r\n        <div class=\"bg-img\">\r\n           <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand \" href=\"#\"><b>CITIZEN CARD SYSTEM</b></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" aria-current=\"page\" href=\"/\"><b>Home</b></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/citizenid\"><b>Citizen Id</b></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/bankaccount\"><b>Bank Account</b></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/create\"><b>Telephone Connection</b></a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n      \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default HeaderComponent","D:\\TelephoneConnection\\telephoneconnection\\src\\components\\HomeComponent.jsx",[],"D:\\TelephoneConnection\\telephoneconnection\\src\\components\\BankAccountComponent.jsx",["54","55"],"D:\\TelephoneConnection\\telephoneconnection\\src\\components\\CitizenIdComponent.jsx",[],"D:\\TelephoneConnection\\telephoneconnection\\src\\components\\ListTelephoneConnectionComponent.jsx",[],"D:\\TelephoneConnection\\telephoneconnection\\src\\services\\TelephoneConnectionService.jsx",[],"D:\\TelephoneConnection\\telephoneconnection\\src\\components\\TelephoneConnectionComponent.jsx",["56","57","58"],"import React, { Component } from 'react';\r\nimport TelephoneConnectionService from '../services/TelephoneConnectionService';\r\nimport tele2 from './images/tele2.jpg'\r\n\r\nclass TelephoneConnectionComponent extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n          /* citizenId:'',\r\n           citizenName:'',\r\n           citizenAge:'',\r\n           citizenAddress:'',\r\n           citizenMotherName:'',\r\n           citizenFatherName:'',*/\r\n           fields:{},\r\n            errors:{}\r\n        };\r\n            \r\n        \r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.saveConnection = this.saveConnection.bind(this);\r\n    }\r\n   \r\n   handleChange(e){\r\n    let nam = e.target.name;\r\n    let val = e.target.value;\r\n    this.setState({[nam]: val});\r\n    \r\n   } \r\n  \r\n    saveConnection = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let telephone = {citizenId: this.state.citizenId,citizenName: this.state.citizenName, citizenAge: this.state.citizenAge, citizenAddress: this.state.citizenAddress,\r\n            citizenMotherName: this.state.citizenMotherName,citizenFatherName: this.state.citizenFatherName};\r\n        console.log('telephone => ' + JSON.stringify(telephone));\r\n        if(this.validate()){\r\n        alert(\"Telephone Connection established successfully! \");\r\n        \r\n        TelephoneConnectionService.createNewTelephoneConnection(telephone).then(res=>{\r\n            this.props.history.push('/list');\r\n        });\r\n        }\r\n\r\n        }\r\n\r\n    validate(){\r\n       \r\n        let errors = {};\r\n        let isValid= true;\r\n\r\n        const { citizenId, citizenName,citizenAge,citizenAddress,citizenMotherName,citizenFatherName} = this.state;\r\n        if (!citizenId) {\r\n            isValid= false;\r\n            errors[\"citizenId\"] = \"*Please enter your citizen id!\";\r\n          \r\n        }\r\n        \r\n          if (!citizenName) {\r\n            isValid= false;\r\n            errors[\"citizenName\"] = \"*Please enter your name!\";\r\n          \r\n          }\r\n        if (typeof citizenName !== \"undefined\") {\r\n              \r\n            var pattern = new RegExp(\"^[a-zA-Z ]\");\r\n            if (!pattern.test(citizenName)) {\r\n              isValid = false;\r\n              errors[\"citizenName\"] = \"*Please enter alphabet characters only!\";\r\n            }\r\n        \r\n          }\r\n          if (!citizenAge) {\r\n            isValid= false;\r\n            errors[\"citizenAge\"] = \"*Please enter your age!\";\r\n          \r\n        }\r\n        if (!citizenAddress) {\r\n            isValid= false;\r\n            errors[\"citizenAddress\"] = \"*Please enter your address!\";\r\n          \r\n        }\r\n        if (typeof citizenAddress !== \"undefined\") {\r\n              \r\n            var pattern = new RegExp(\"^[0-9a-zA-Z ]\");\r\n            if (!pattern.test(citizenAddress)) {\r\n              isValid = false;\r\n              errors[\"citizenAddress\"] = \"*Please enter valid address!\";\r\n            }\r\n          }\r\n          if (!citizenMotherName) {\r\n            isValid= false;\r\n            errors[\"citizenMotherName\"] = \"*Please enter your mother's name!\";\r\n          \r\n        }\r\n        if (typeof citizenMotherName !== \"undefined\") {\r\n              \r\n            var pattern = new RegExp(\"^[a-zA-Z ]\");\r\n            if (!pattern.test(citizenMotherName)) {\r\n              isValid = false;\r\n              errors[\"citizenMotherName\"] = \"*Please enter alphabet characters only!\";\r\n            }\r\n          }\r\n          if (!citizenFatherName) {\r\n            isValid= false;\r\n            errors[\"citizenFatherName\"] = \"*Please enter your father's name!\";\r\n          \r\n        }\r\n        if (typeof citizenFatherName !== \"undefined\") {\r\n           \r\n        \r\n            var pattern = new RegExp(\"^[a-zA-Z ]\");\r\n            if (!pattern.test(citizenFatherName)) {\r\n              isValid = false;\r\n              errors[\"citizenFatherName\"] = \"*Please enter alphabet characters only!\";\r\n            }\r\n        }\r\n       \r\n       \r\n          this.setState({\r\n            errors: errors\r\n          });\r\n      \r\n          return isValid;\r\n\r\n    }\r\n    cancel(){\r\n        this.props.history.push('/');\r\n    }\r\n    view(){\r\n        this.props.history.push('/list');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                 <div style={{backgroundImage:`url(${tele2})`,backgroundRepeat:\"no-repeat\",backgroundSize:\"contain\"}}>\r\n            \r\n                        <div className = \"row\">\r\n                            <div className = \"card ml-6 col-md-4 offset-md-3 offset-md-2 mt-5 mb-5 bg-light\"  >\r\n                                <h2 style={{textAlign:'center'}}> TELEPHONE CONNECTION </h2>\r\n                                <h3 style={{textAlign:'center'}}>Registration Form</h3>\r\n                    \r\n                                <div className = \"card-body \">\r\n                                    <form>\r\n                                       \r\n                                    <div className = \"form-group \">\r\n                                            <label><b> Citizen Id:</b> </label>\r\n                                            <input type=\"number\" min=\"1\" placeholder=\"Enter your citizen id\" name=\"citizenId\" className=\"form-control\" \r\n                                                value={this.state.citizenId} onChange={this.handleChange}\r\n                                                />\r\n                                                \r\n                                                <div className=\"text-danger\">{this.state.errors.citizenId}</div>\r\n                                               </div> \r\n                                        \r\n                                       \r\n\r\n                                        <div className = \"form-group\">\r\n                                            <label><b> Citizen Name:</b> </label>\r\n                                            <input type=\"text\" name=\"citizenName\" placeholder=\"Enter your name\" value={this.state.citizenName} className=\"form-control\" \r\n                                                 onChange={this.handleChange} />\r\n                                        \r\n                                        <div className=\"text-danger\">{this.state.errors.citizenName}</div>\r\n                                        </div>\r\n\r\n                                        <div className = \"form-group\">\r\n                                            <label><b> Citizen Age:</b> </label>\r\n                                            <input type=\"number\" min=\"18\"placeholder=\"Enter your age\" name=\"citizenAge\" className=\"form-control\" \r\n                                                value={this.state.citizenAge} onChange={this.handleChange}\r\n                                                />\r\n                                                  <div className=\"text-danger\">{this.state.errors.citizenAge}</div>\r\n                                        </div>\r\n                                       \r\n                                        <div className = \"form-group\">\r\n                                            <label> <b> Citizen Address:</b> </label>\r\n                                            <input type=\"text\"placeholder=\"Enter your address\" name=\"citizenAddress\" className=\"form-control\" \r\n                                                value={this.state.citizenAddress} onChange={this.handleChange}\r\n                                            />\r\n                                            <div className=\"text-danger\">{this.state.errors.citizenAddress}</div>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label><b> Citizen Mother Name:</b> </label>\r\n                                            <input type=\"text\" placeholder=\"Enter your mother's name\" name=\"citizenMotherName\" className=\"form-control\" \r\n                                                value={this.state.citizenMotherName} onChange={this.handleChange}\r\n                                                />\r\n                                               <div className=\"text-danger\">{this.state.errors.citizenMotherName}</div>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label><b> Citizen Father Name: </b></label>\r\n                                            <input type=\"text\" placeholder=\"Enter your father's name\" name=\"citizenFatherName\" className=\"form-control\" \r\n                                                value={this.state.citizenFatherName} onChange={this.handleChange}\r\n                                               />\r\n                                               <div className=\"text-danger\">{this.state.errors.citizenFatherName}</div>\r\n                                        </div>\r\n                                        \r\n\r\n                                       <button className=\"btn btn-success\" onClick={this.saveConnection}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                        <button className=\"btn btn-dark\" onClick={this.view.bind(this)} style={{marginLeft: \"10px\"}}>View</button>\r\n                                    \r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TelephoneConnectionComponent;\r\n","D:\\TelephoneConnection\\telephoneconnection\\src\\components\\SuccessTelephoneConnectionComponent.jsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":11,"column":5,"nodeType":"69","endLine":11,"endColumn":39},{"ruleId":"63","severity":1,"message":"70","line":55,"column":13,"nodeType":"65","messageId":"66","endLine":55,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":79,"column":21,"nodeType":"69","endLine":79,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":85,"column":17,"nodeType":"65","messageId":"75","endLine":85,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":98,"column":17,"nodeType":"65","messageId":"75","endLine":98,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":112,"column":17,"nodeType":"65","messageId":"75","endLine":112,"endColumn":24},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'account' is assigned a value but never used.","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","no-redeclare","'pattern' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]